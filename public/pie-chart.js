// Generated by CoffeeScript 1.3.3
(function() {
  var PieChart;

  PieChart = (function() {

    function PieChart(canvas) {
      this.canvas = canvas;
      this.ctx = this.canvas.getContext('2d');
      this.data = [];
      this.radius = 100;
      this.cx = this.canvas.width / 2;
      this.cy = this.canvas.height / 2;
    }

    PieChart.prototype.update = function(data) {
      return this.data = data;
    };

    PieChart.prototype.increase = function(name, n) {
      if (n == null) {
        n = 1;
      }
      return this._get(name).value += n;
    };

    PieChart.prototype.decreaseAll = function(n) {
      var x, _i, _len, _ref, _results;
      _ref = this.data;
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        x = _ref[_i];
        _results.push(x.value -= n);
      }
      return _results;
    };

    PieChart.prototype._get = function(name) {
      var x, _i, _len, _ref;
      _ref = this.data;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        x = _ref[_i];
        if (x.name === name) {
          return x;
        }
      }
      return null;
    };

    PieChart.prototype.draw = function() {
      var end, offset, pi2, start, x, _i, _len, _ref, _ref1, _results;
      this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);
      offset = -Math.PI / 2;
      pi2 = Math.PI * 2;
      _ref = this.ranges();
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        _ref1 = _ref[_i], x = _ref1[0], start = _ref1[1], end = _ref1[2];
        _results.push(this.drawSector(start * pi2 + offset, end * pi2 + offset, x.color));
      }
      return _results;
    };

    PieChart.prototype.drawSector = function(start, end, color) {
      this.ctx.fillStyle = color;
      this.ctx.beginPath();
      this.ctx.moveTo(this.cx, this.cy);
      this.ctx.arc(this.cx, this.cy, this.radius, start, end);
      this.ctx.lineTo(this.cx, this.cy);
      this.ctx.fill();
      return this.ctx.closePath();
    };

    PieChart.prototype.sum = function() {
      var n, x, _i, _len, _ref;
      n = 0;
      _ref = this.data;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        x = _ref[_i];
        n += x.value;
      }
      return n;
    };

    PieChart.prototype.ranges = function() {
      var a, n, total, x, _i, _len, _ref;
      a = [];
      total = this.sum();
      n = 0;
      _ref = this.data;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        x = _ref[_i];
        a.push([x, n / total, (n + x.value) / total]);
        n += x.value;
      }
      return a;
    };

    return PieChart;

  })();

  this.PieChart = PieChart;

}).call(this);
